/* soapZMM036F1Proxy.cpp
   Generated by gSOAP 2.8.129 for erp.h

gSOAP XML Web services tools
Copyright (C) 2000-2023, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapZMM036F1Proxy.h"

ZMM036F1Proxy::ZMM036F1Proxy()
{	this->soap = soap_new();
	this->soap_own = true;
	ZMM036F1Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ZMM036F1Proxy::ZMM036F1Proxy(const ZMM036F1Proxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

ZMM036F1Proxy::ZMM036F1Proxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	ZMM036F1Proxy_init(_soap->imode, _soap->omode);
}

ZMM036F1Proxy::ZMM036F1Proxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	ZMM036F1Proxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

ZMM036F1Proxy::ZMM036F1Proxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	ZMM036F1Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

ZMM036F1Proxy::ZMM036F1Proxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ZMM036F1Proxy_init(iomode, iomode);
}

ZMM036F1Proxy::ZMM036F1Proxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ZMM036F1Proxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

ZMM036F1Proxy::ZMM036F1Proxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	ZMM036F1Proxy_init(imode, omode);
}

ZMM036F1Proxy::~ZMM036F1Proxy()
{	if (this->soap_own)
	{	ZMM036F1Proxy::destroy();
		soap_free(this->soap);
	}
}

void ZMM036F1Proxy::ZMM036F1Proxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL },
        { "SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "ns1", "urn:sap-com:document:sap:rfc:functions", NULL, NULL },
        { "c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL },
        { "ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL },
        { "saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL },
        { "saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL },
        { "wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL },
        { "xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL },
        { "wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL },
        { "wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL },
        { "chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL },
        { "wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL },
        { NULL, NULL, NULL, NULL} /* end of namespaces[] */
    };
	soap_set_namespaces(this->soap, namespaces);
}

ZMM036F1Proxy *ZMM036F1Proxy::copy()
{	ZMM036F1Proxy *dup = SOAP_NEW_UNMANAGED(ZMM036F1Proxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

ZMM036F1Proxy& ZMM036F1Proxy::operator=(const ZMM036F1Proxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void ZMM036F1Proxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void ZMM036F1Proxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	ZMM036F1Proxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ZMM036F1Proxy::soap_noheader()
{	this->soap->header = NULL;
}

void ZMM036F1Proxy::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance)
{
	::soap_header(this->soap);
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
}

::SOAP_ENV__Header *ZMM036F1Proxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *ZMM036F1Proxy::soap_fault()
{	return this->soap->fault;
}

const char *ZMM036F1Proxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *ZMM036F1Proxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *ZMM036F1Proxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int ZMM036F1Proxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int ZMM036F1Proxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void ZMM036F1Proxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ZMM036F1Proxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *ZMM036F1Proxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int ZMM036F1Proxy::send_ZMM036F1(const char *soap_endpoint_url, const char *soap_action, _ns1__ZMM036F1 *ns1__ZMM036F1)
{
	struct __ns1__ZMM036F1 soap_tmp___ns1__ZMM036F1;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://erpqasap.intai-corp.com:8100/sap/bc/srt/rfc/sap/zmm036f1/288/zmm036f1/zmm036f1";
	if (soap_action == NULL)
		soap_action = "urn:sap-com:document:sap:rfc:functions:ZMM036F1:ZMM036F1Request";
	soap_tmp___ns1__ZMM036F1.ns1__ZMM036F1 = ns1__ZMM036F1;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ZMM036F1(soap, &soap_tmp___ns1__ZMM036F1);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ZMM036F1(soap, &soap_tmp___ns1__ZMM036F1, "-ns1:ZMM036F1", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ZMM036F1(soap, &soap_tmp___ns1__ZMM036F1, "-ns1:ZMM036F1", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int ZMM036F1Proxy::recv_ZMM036F1(_ns1__ZMM036F1Response &ns1__ZMM036F1Response)
{
	ns1__ZMM036F1Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ZMM036F1Response.soap_get(soap, "ns1:ZMM036F1Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ZMM036F1Proxy::send_ZMM036F1_(const char *soap_endpoint_url, const char *soap_action, _ns1__ZMM036F1 *ns1__ZMM036F1)
{
	struct __ns1__ZMM036F1_ soap_tmp___ns1__ZMM036F1_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "https://erpqasap.intai-corp.com:8100/sap/bc/srt/rfc/sap/zmm036f1/288/zmm036f1/zmm036f1";
	if (soap_action == NULL)
		soap_action = "urn:sap-com:document:sap:rfc:functions:ZMM036F1:ZMM036F1Request";
	soap_tmp___ns1__ZMM036F1_.ns1__ZMM036F1 = ns1__ZMM036F1;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ZMM036F1_(soap, &soap_tmp___ns1__ZMM036F1_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ZMM036F1_(soap, &soap_tmp___ns1__ZMM036F1_, "-ns1:ZMM036F1", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ZMM036F1_(soap, &soap_tmp___ns1__ZMM036F1_, "-ns1:ZMM036F1", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int ZMM036F1Proxy::recv_ZMM036F1_(_ns1__ZMM036F1Response &ns1__ZMM036F1Response)
{
	ns1__ZMM036F1Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ZMM036F1Response.soap_get(soap, "ns1:ZMM036F1Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
